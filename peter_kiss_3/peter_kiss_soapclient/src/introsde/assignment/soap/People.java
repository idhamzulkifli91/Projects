
package introsde.assignment.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "People", targetNamespace = "http://soap.assignment.introsde/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface People {


    /**
     * 
     * @param personId
     * @return
     *     returns introsde.assignment.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonRequest", output = "http://soap.assignment.introsde/People/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        int personId);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.CreatePersonResponse")
    @Action(input = "http://soap.assignment.introsde/People/createPersonRequest", output = "http://soap.assignment.introsde/People/createPersonResponse")
    public void createPerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePersonResponse")
    @Action(input = "http://soap.assignment.introsde/People/updatePersonRequest", output = "http://soap.assignment.introsde/People/updatePersonResponse")
    public void updatePerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "personId", targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.DeletePersonResponse")
    @Action(input = "http://soap.assignment.introsde/People/deletePersonRequest", output = "http://soap.assignment.introsde/People/deletePersonResponse")
    public int deletePerson(
        @WebParam(name = "personId", targetNamespace = "")
        long personId);

    /**
     * 
     * @param measure
     * @param personId
     * @return
     *     returns introsde.assignment.soap.LifeStatus
     */
    @WebMethod
    @WebResult(name = "updatedPersonMeasurement", targetNamespace = "")
    @RequestWrapper(localName = "updatePersonMeasurement", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePersonMeasurement")
    @ResponseWrapper(localName = "updatePersonMeasurementResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePersonMeasurementResponse")
    @Action(input = "http://soap.assignment.introsde/People/updatePersonMeasurementRequest", output = "http://soap.assignment.introsde/People/updatePersonMeasurementResponse")
    public LifeStatus updatePersonMeasurement(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measure", targetNamespace = "")
        LifeStatus measure);

    /**
     * 
     * @param after
     * @param before
     * @param measureType
     * @param personId
     * @return
     *     returns java.util.List<introsde.assignment.soap.LifeStatus>
     */
    @WebMethod
    @WebResult(name = "measures", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasureByDates", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonMeasureByDates")
    @ResponseWrapper(localName = "readPersonMeasureByDatesResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonMeasureByDatesResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonMeasureByDatesRequest", output = "http://soap.assignment.introsde/People/readPersonMeasureByDatesResponse")
    public List<LifeStatus> readPersonMeasureByDates(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "before", targetNamespace = "")
        String before,
        @WebParam(name = "after", targetNamespace = "")
        String after);

    /**
     * 
     * @param minValue
     * @param measureType
     * @param maxValue
     * @return
     *     returns java.util.List<introsde.assignment.soap.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "readPersonListByMeasurement", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonListByMeasurement")
    @ResponseWrapper(localName = "readPersonListByMeasurementResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonListByMeasurementResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonListByMeasurementRequest", output = "http://soap.assignment.introsde/People/readPersonListByMeasurementResponse")
    public List<Person> readPersonListByMeasurement(
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "maxValue", targetNamespace = "")
        String maxValue,
        @WebParam(name = "minValue", targetNamespace = "")
        String minValue);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.assignment.soap.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "readPersonList", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonList")
    @ResponseWrapper(localName = "readPersonListResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonListResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonListRequest", output = "http://soap.assignment.introsde/People/readPersonListResponse")
    public List<Person> readPersonList();

    /**
     * 
     * @param personId
     * @param healthProfile
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "hpId", targetNamespace = "")
    @RequestWrapper(localName = "updatePersonHealthProfile", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePersonHealthProfile")
    @ResponseWrapper(localName = "updatePersonHealthProfileResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.UpdatePersonHealthProfileResponse")
    @Action(input = "http://soap.assignment.introsde/People/updatePersonHealthProfileRequest", output = "http://soap.assignment.introsde/People/updatePersonHealthProfileResponse")
    public int updatePersonHealthProfile(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "healthProfile", targetNamespace = "")
        LifeStatus healthProfile);

    /**
     * 
     * @param measurDefinitionId
     * @return
     *     returns introsde.assignment.soap.MeasureDefinition
     */
    @WebMethod
    @WebResult(name = "measurDefinition", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureDefinition", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadMeasureDefinition")
    @ResponseWrapper(localName = "readMeasureDefinitionResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadMeasureDefinitionResponse")
    @Action(input = "http://soap.assignment.introsde/People/readMeasureDefinitionRequest", output = "http://soap.assignment.introsde/People/readMeasureDefinitionResponse")
    public MeasureDefinition readMeasureDefinition(
        @WebParam(name = "measurDefinitionId", targetNamespace = "")
        int measurDefinitionId);

    /**
     * 
     * @param measurType
     * @param personId
     * @return
     *     returns java.util.List<introsde.assignment.soap.LifeStatus>
     */
    @WebMethod
    @WebResult(name = "personHistory", targetNamespace = "")
    @RequestWrapper(localName = "readPersonHistory", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonHistory")
    @ResponseWrapper(localName = "readPersonHistoryResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonHistoryResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonHistoryRequest", output = "http://soap.assignment.introsde/People/readPersonHistoryResponse")
    public List<LifeStatus> readPersonHistory(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measurType", targetNamespace = "")
        String measurType);

    /**
     * 
     * @param measurType
     * @param personId
     * @param mid
     * @return
     *     returns introsde.assignment.soap.LifeStatus
     */
    @WebMethod
    @WebResult(name = "personMeasurment", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasurement", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonMeasurement")
    @ResponseWrapper(localName = "readPersonMeasurementResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadPersonMeasurementResponse")
    @Action(input = "http://soap.assignment.introsde/People/readPersonMeasurementRequest", output = "http://soap.assignment.introsde/People/readPersonMeasurementResponse")
    public LifeStatus readPersonMeasurement(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measurType", targetNamespace = "")
        String measurType,
        @WebParam(name = "mid", targetNamespace = "")
        int mid);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(name = "measureTypes", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureTypes", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadMeasureTypes")
    @ResponseWrapper(localName = "readMeasureTypesResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.ReadMeasureTypesResponse")
    @Action(input = "http://soap.assignment.introsde/People/readMeasureTypesRequest", output = "http://soap.assignment.introsde/People/readMeasureTypesResponse")
    public List<String> readMeasureTypes();

    /**
     * 
     * @param measure
     * @param personId
     * @return
     *     returns introsde.assignment.soap.LifeStatus
     */
    @WebMethod
    @WebResult(name = "savePersonMeasurment", targetNamespace = "")
    @RequestWrapper(localName = "savePersonMeasurement", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.SavePersonMeasurement")
    @ResponseWrapper(localName = "savePersonMeasurementResponse", targetNamespace = "http://soap.assignment.introsde/", className = "introsde.assignment.soap.SavePersonMeasurementResponse")
    @Action(input = "http://soap.assignment.introsde/People/savePersonMeasurementRequest", output = "http://soap.assignment.introsde/People/savePersonMeasurementResponse")
    public LifeStatus savePersonMeasurement(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measure", targetNamespace = "")
        LifeStatus measure);

}
