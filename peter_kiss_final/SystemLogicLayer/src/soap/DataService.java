
package soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DataService", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DataService {


    /**
     * 
     * @param after
     * @param before
     * @param measureType
     * @param personId
     * @return
     *     returns java.util.List<soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measuresByTypeAndDate", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasuresByTypeAndDate", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByTypeAndDate")
    @ResponseWrapper(localName = "readPersonMeasuresByTypeAndDateResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByTypeAndDateResponse")
    @Action(input = "http://soap/DataService/readPersonMeasuresByTypeAndDateRequest", output = "http://soap/DataService/readPersonMeasuresByTypeAndDateResponse")
    public List<Measure> readPersonMeasuresByTypeAndDate(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "before", targetNamespace = "")
        String before,
        @WebParam(name = "after", targetNamespace = "")
        String after);

    /**
     * 
     * @param personId
     * @return
     *     returns soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://soap/", className = "soap.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonResponse")
    @Action(input = "http://soap/DataService/readPersonRequest", output = "http://soap/DataService/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        int personId);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://soap/", className = "soap.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://soap/", className = "soap.CreatePersonResponse")
    @Action(input = "http://soap/DataService/createPersonRequest", output = "http://soap/DataService/createPersonResponse")
    public void createPerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measures", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasures", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasures")
    @ResponseWrapper(localName = "readPersonMeasuresResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresResponse")
    @Action(input = "http://soap/DataService/readPersonMeasuresRequest", output = "http://soap/DataService/readPersonMeasuresResponse")
    public List<Measure> readPersonMeasures(
        @WebParam(name = "personId", targetNamespace = "")
        int personId);

    /**
     * 
     * @param measureType
     * @param personId
     * @return
     *     returns java.util.List<soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measures", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasuresByType", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByType")
    @ResponseWrapper(localName = "readPersonMeasuresByTypeResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByTypeResponse")
    @Action(input = "http://soap/DataService/readPersonMeasuresByTypeRequest", output = "http://soap/DataService/readPersonMeasuresByTypeResponse")
    public List<Measure> readPersonMeasuresByType(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType);

    /**
     * 
     * @param measureType
     * @param personId
     * @return
     *     returns java.util.List<soap.Goal>
     */
    @WebMethod
    @WebResult(name = "measures", targetNamespace = "")
    @RequestWrapper(localName = "readPersonGoalsByType", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByType")
    @ResponseWrapper(localName = "readPersonGoalsByTypeResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByTypeResponse")
    @Action(input = "http://soap/DataService/readPersonGoalsByTypeRequest", output = "http://soap/DataService/readPersonGoalsByTypeResponse")
    public List<Goal> readPersonGoalsByType(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType);

    /**
     * 
     * @param after
     * @param before
     * @param personId
     * @return
     *     returns java.util.List<soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measuresByDate", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasuresByDate", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByDate")
    @ResponseWrapper(localName = "readPersonMeasuresByDateResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonMeasuresByDateResponse")
    @Action(input = "http://soap/DataService/readPersonMeasuresByDateRequest", output = "http://soap/DataService/readPersonMeasuresByDateResponse")
    public List<Measure> readPersonMeasuresByDate(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "before", targetNamespace = "")
        String before,
        @WebParam(name = "after", targetNamespace = "")
        String after);

    /**
     * 
     * @param after
     * @param before
     * @param personId
     * @return
     *     returns java.util.List<soap.Goal>
     */
    @WebMethod
    @WebResult(name = "measuresByDate", targetNamespace = "")
    @RequestWrapper(localName = "readPersonGoalsByDate", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByDate")
    @ResponseWrapper(localName = "readPersonGoalsByDateResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByDateResponse")
    @Action(input = "http://soap/DataService/readPersonGoalsByDateRequest", output = "http://soap/DataService/readPersonGoalsByDateResponse")
    public List<Goal> readPersonGoalsByDate(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "before", targetNamespace = "")
        String before,
        @WebParam(name = "after", targetNamespace = "")
        String after);

    /**
     * 
     * @param after
     * @param before
     * @param measureType
     * @param personId
     * @return
     *     returns java.util.List<soap.Goal>
     */
    @WebMethod
    @WebResult(name = "measuresByTypeAndDate", targetNamespace = "")
    @RequestWrapper(localName = "readPersonGoalsByTypeAndDate", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByTypeAndDate")
    @ResponseWrapper(localName = "readPersonGoalsByTypeAndDateResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsByTypeAndDateResponse")
    @Action(input = "http://soap/DataService/readPersonGoalsByTypeAndDateRequest", output = "http://soap/DataService/readPersonGoalsByTypeAndDateResponse")
    public List<Goal> readPersonGoalsByTypeAndDate(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "before", targetNamespace = "")
        String before,
        @WebParam(name = "after", targetNamespace = "")
        String after);

    /**
     * 
     * @return
     *     returns java.util.List<soap.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "readPersonList", targetNamespace = "http://soap/", className = "soap.ReadPersonList")
    @ResponseWrapper(localName = "readPersonListResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonListResponse")
    @Action(input = "http://soap/DataService/readPersonListRequest", output = "http://soap/DataService/readPersonListResponse")
    public List<Person> readPersonList();

    /**
     * 
     * @return
     *     returns java.util.List<soap.MeasureType>
     */
    @WebMethod
    @WebResult(name = "MeasureTypes", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureTypeList", targetNamespace = "http://soap/", className = "soap.ReadMeasureTypeList")
    @ResponseWrapper(localName = "readMeasureTypeListResponse", targetNamespace = "http://soap/", className = "soap.ReadMeasureTypeListResponse")
    @Action(input = "http://soap/DataService/readMeasureTypeListRequest", output = "http://soap/DataService/readMeasureTypeListResponse")
    public List<MeasureType> readMeasureTypeList();

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<soap.Goal>
     */
    @WebMethod
    @WebResult(name = "measures", targetNamespace = "")
    @RequestWrapper(localName = "readPersonGoals", targetNamespace = "http://soap/", className = "soap.ReadPersonGoals")
    @ResponseWrapper(localName = "readPersonGoalsResponse", targetNamespace = "http://soap/", className = "soap.ReadPersonGoalsResponse")
    @Action(input = "http://soap/DataService/readPersonGoalsRequest", output = "http://soap/DataService/readPersonGoalsResponse")
    public List<Goal> readPersonGoals(
        @WebParam(name = "personId", targetNamespace = "")
        int personId);

    /**
     * 
     * @param measure
     * @param personId
     * @return
     *     returns soap.Measure
     */
    @WebMethod
    @WebResult(name = "savePersonMeasurment", targetNamespace = "")
    @RequestWrapper(localName = "savePersonMeasurement", targetNamespace = "http://soap/", className = "soap.SavePersonMeasurement")
    @ResponseWrapper(localName = "savePersonMeasurementResponse", targetNamespace = "http://soap/", className = "soap.SavePersonMeasurementResponse")
    @Action(input = "http://soap/DataService/savePersonMeasurementRequest", output = "http://soap/DataService/savePersonMeasurementResponse")
    public Measure savePersonMeasurement(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "measure", targetNamespace = "")
        Measure measure);

    /**
     * 
     * @param personId
     * @param goal
     * @return
     *     returns soap.Goal
     */
    @WebMethod
    @WebResult(name = "savePersonMeasurment", targetNamespace = "")
    @RequestWrapper(localName = "savePersonGoal", targetNamespace = "http://soap/", className = "soap.SavePersonGoal")
    @ResponseWrapper(localName = "savePersonGoalResponse", targetNamespace = "http://soap/", className = "soap.SavePersonGoalResponse")
    @Action(input = "http://soap/DataService/savePersonGoalRequest", output = "http://soap/DataService/savePersonGoalResponse")
    public Goal savePersonGoal(
        @WebParam(name = "personId", targetNamespace = "")
        int personId,
        @WebParam(name = "goal", targetNamespace = "")
        Goal goal);

    /**
     * 
     * @param createMeasureType
     */
    @WebMethod
    @RequestWrapper(localName = "createMeasureType", targetNamespace = "http://soap/", className = "soap.CreateMeasureType")
    @ResponseWrapper(localName = "createMeasureTypeResponse", targetNamespace = "http://soap/", className = "soap.CreateMeasureTypeResponse")
    @Action(input = "http://soap/DataService/createMeasureTypeRequest", output = "http://soap/DataService/createMeasureTypeResponse")
    public void createMeasureType(
        @WebParam(name = "createMeasureType", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<MeasureType> createMeasureType);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "getRandomQuote", targetNamespace = "")
    @RequestWrapper(localName = "getRandomQuote", targetNamespace = "http://soap/", className = "soap.GetRandomQuote")
    @ResponseWrapper(localName = "getRandomQuoteResponse", targetNamespace = "http://soap/", className = "soap.GetRandomQuoteResponse")
    @Action(input = "http://soap/DataService/getRandomQuoteRequest", output = "http://soap/DataService/getRandomQuoteResponse")
    public String getRandomQuote();

}
